{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://cve.mitre.org/cve/v5_00/",
    "type": "object",
    "title": "CVE JSON record format",
    "description": "cve-schema specifies the CVE JSON record format. This is the blueprint for a rich set of JSON data that can be submitted by CVE Numbering Authorities (CNAs) and Authorized Data Publishers (ADPs) to describe a CVE record. Some examples of CVE record data include CVE ID number, affected product(s), affected version(s), and public references. While those specific items are required when assigning a CVE, there are many other optional data in the schema that can be used to enrich CVE records for community benefit. Learn more about the CVE program at [the official website](https://cve.mitre.org). This CVE JSON record format is defined using JSON Schema. Learn more about JSON Schema [here](https://json-schema.org/).",
    "definitions": {
        "uriType": {
            "description": "A universal resource identifier (URI), according to [RFC 3986](https://tools.ietf.org/html/rfc3986).",
            "type": "string",
            "format": "uri",
            "minLength": 1
        },
        "uuidType": {
            "description": "A version 4 (random) universally unique identifier (UUID) as defined by [RFC 4122](https://tools.ietf.org/html/rfc4122#section-4.1.3).",
            "type": "string",
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$"
        },
        "reference": {
            "type": "object",
            "required": ["url"],
            "properties": {
                "url": {
                    "description": "The uniform resource locator (URL), according to [RFC 3986](https://tools.ietf.org/html/rfc3986#section-1.1.3), that can be used to retrieve the referenced resource.",
                    "$ref": "#/definitions/uriType"
                },
                "name": {
                    "description": "User created name for the reference, often the title of the page.",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "tags": {
                    "description": "an array of one or more tags that describe the resource referenced by 'url'.",
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/tagExtension"
                            },
                            {
                                "$ref": "file:tags/reference-tags.json"
                            }
                        ]
                    }
                }
            }
        },
        "cveId": {
            "type": "string",
            "pattern": "^CVE-[0-9]{4}-[0-9]{4,19}$"
        },
        "orgId": {
            "description": "a UUID for an organization participating in the CVE program. This UUID can be used to lookup the organization record in the user registry service.",
            "$ref": "#/definitions/uuidType"
        },
        "userId": {
            "description": "a UUID for a user participating in the CVE program. This UUID can be used to lookup the user record in the user registry service.",
            "$ref": "#/definitions/uuidType"
        },
        "shortName": {
            "$comment": "TODO: description needed",
            "type": "string",
            "minLength": 3,
            "maxLength": 12
        },
        "datestamp": {
            "description": "Date/time format based on RFC3339 and ISO ISO8601",
            "type": "string",
            "format": "date",
            "pattern": "^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))$"
        },
        "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Date/time format based on RFC3339 and ISO ISO8601, with an optional timezone in the format 'yyyy-MM-ddTHH:mm:ssZZZZ'. If timezone offset is not given, GMT (0000) is assumed.",
            "pattern": "^((2000|2400|2800|(19|2[0-9](0[48]|[2468][048]|[13579][26])))-02-29)|(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))|(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))|(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-][0-9]{2}:[0-9]{2})?$"
        },
        "product": {
            "type": "object",
            "description": "Provides information about the set of products and services affected by this vulnerability.",
            "required": [
                "productName",
                "versions"
            ],
            "properties": {
                "productName": {
                    "type": "string",
                    "description": "Name of the affected product.",
                    "minLength": 1,
                    "maxLength": 2058
                },
                "modules": {
                    "type": "array",
                    "description": "A list of the affected components, features, modules, sub-components, sub-products, APIs, commands, utilities, programs, or functionalities (optional)",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "description": "Name of the affected component, feature, module, sub-component, sub-product, API, command, utility, program, or functionality (optional).",
                        "minLength": 1,
                        "maxLength": 4000
                    }
                },
                "programFiles": {
                    "type": "array",
                    "description": "A list of the affected source code files (optional)",
                    "uniqueItems": true,
                    "items": {
                        "description": "Name or path or location of the affected source code file in RFC3986 compliant format (optional).",
                        "$ref": "#/definitions/uriType"
                    }
                },
                "programRoutines": {
                    "type": "array",
                    "description": "A list of the affected source code functions, methods, subroutines, or procedures (optional).",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "description": "Name of the affected source code file, function, method, subroutine, or procedure (optional).",
                        "minLength": 1,
                        "maxLength": 4000
                    }
                },
                "packageName": {
                    "type": "string",
                    "description": "Name or identifier of the affected software package as used in the package collection (optional).",
                    "minLength": 1,
                    "maxLength": 2058
                 },
                "collectionURL": {
                    "description": "A URL that, among the users of the software package collection, is considered the most popular starting point for accessing the collection (optional).",
                    "$ref": "#/definitions/uriType",
                    "examples": [
                        "https://access.redhat.com/downloads/content/package-browser",
                        "https://addons.mozilla.org",
                        "https://addons.thunderbird.net",
                        "https://anaconda.org/anaconda/repo",
                        "https://app.vagrantup.com/boxes/search",
                        "https://apps.apple.com",
                        "https://archlinux.org/packages",
                        "https://atmospherejs.meteor.com",
                        "https://atom.io/packages",
                        "https://bitbucket.org",
                        "https://bower.io",
                        "https://brew.sh/",
                        "https://chocolatey.org/packages",
                        "https://chrome.google.com/webstore",
                        "https://clojars.org",
                        "https://cocoapods.org",
                        "https://code.dlang.org",
                        "https://conan.io/center",
                        "https://cpan.org/modules",
                        "https://cran.r-project.org",
                        "https://crates.io",
                        "https://ctan.org/pkg",
                        "https://drupal.org",
                        "https://exchange.adobe.com",
                        "https://forge.puppet.com/modules",
                        "https://github.com",
                        "https://gitlab.com/explore",
                        "https://golang.org/pkg",
                        "https://guix.gnu.org/packages",
                        "https://hackage.haskell.org",
                        "https://helm.sh",
                        "https://hub.docker.com",
                        "https://juliahub.com",
                        "https://lib.haxe.org",
                        "https://luarocks.org",
                        "https://marketplace.visualstudio.com",
                        "https://melpa.org",
                        "https://microsoft.com/en-us/store/apps",
                        "https://nimble.directory",
                        "https://nuget.org/packages",
                        "https://opam.ocaml.org/packages",
                        "https://openwrt.org/packages/index",
                        "https://package.elm-lang.org",
                        "https://packagecontrol.io",
                        "https://packages.debian.org",
                        "https://packages.gentoo.org",
                        "https://packagist.org",
                        "https://pear.php.net/packages.php",
                        "https://pecl.php.net",
                        "https://platformio.org/lib",
                        "https://play.google.com/store",
                        "https://plugins.gradle.org",
                        "https://projects.eclipse.org",
                        "https://pub.dev",
                        "https://pypi.python.org",
                        "https://registry.npmjs.org",
                        "https://registry.terraform.io",
                        "https://repo.hex.pm",
                        "https://repo.maven.apache.org/maven2",
                        "https://rubygems.org",
                        "https://search.nixos.org/packages",
                        "https://sourceforge.net",
                        "https://wordpress.org/plugins"
                    ]
                },
                "versions": {
                    "type": "array",
                    "description": "Set of product versions related to the vulnerability. The versions satisfy the CNA Rules [8.1.2 requirement](https://cve.mitre.org/cve/cna/rules.html#section_8-1_cve_entry_information_requirements).",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "type": "object",
                        "description": "Affected/non-affected/fixed versions of a given technology, product, hardware, etc.",
                        "required": ["versionValue"],
                        "properties": {
                            "versionGroup": {
                                "type": "string",
                                "description": "A string that represents a version branch, group, or a major version (e.g. 10.0, 3.1.*) where all version values are typically sequential or versionAffected comparisons are meaningful (optional).",
                                "minLength": 1,
                                "maxLength": 1024
                            },
                            "versionValue": {
                                "type": "string",
                                "description": "The version name/value (e.g. 10.0.1, 3.1.2, \"IceHouse\")",
                                "minLength": 1,
                                "maxLength": 1024
                            },
                            "versionAffected": {
                                "type": "string",
                                "description": "A string value:\n \"=\" (affects versionValue),\n \"<\" (affects versions prior to versionValue),\n \">\" (affects versions later than versionValue),\n \"<=\" (affects versionValue and prior versions),\n \">=\" (affects versionValue and later versions),\n \"!\" (doesn't affect versionValue),\n \"!<\" (doesn't affect versions prior to versionValue),\n \"!>\" (doesn't affect versions later than versionValue),\n \"!<=\" (doesn't affect versionValue and prior versions),\n \"!>=\" (doesn't affect versionValue and later versions),\n \"?\" (status of versionValue is unknown),\n \"?<\" (status of versions prior to versionValue is unknown),\n \"?>\" (status of versions later than versionValue is unknown),\n \"?<=\" (status of versionValue and prior versions is unknown),\n \"?>=\" (status of versionValue and later versions is unknown)",
                                "enum": [
                                    "=",
                                    "<",
                                    ">",
                                    "<=",
                                    ">=",
                                    "!",
                                    "!<",
                                    "!>",
                                    "!<=",
                                    "!>=",
                                    "?",
                                    "?<",
                                    "?>",
                                    "?<=",
                                    "?>="
                                ]
                            },
                            "platforms": {
                                "title": "Platforms",
                                "description": "List of specific platforms if the versionValue and versionAffected are only relevant in the context of these platforms (optional). Platforms may include execution environments, operating systems, virtualization technolgies, hardware models, or computing architectures. Lack of this field or an empty array implies that the other fields are applicable for all relevant platforms.",
                                "type": "array",
                                "minItems": 1,
                                "uniqueItems": true,
                                "items": {
                                    "type": "string",
                                    "examples": ["iOS", "Android", "Windows", "macOS", "x86", "ARM", "64 bit", "Big Endian", "iPad", "Chromebook", "Docker"],
                                    "maxLength": 1024
                                }
                            },
                            "references": {
                                "$ref": "#/definitions/references"
                            }
                        }
                    }
                }
            }
        },
        "dataType": {
            "description": "Indicates the type of information represented in the JSON instance.",
            "type": "string",
            "enum": [
                "CVE_RECORD"
            ]
        },
        "dataVersion": {
            "description": "The version of the schema being used. Used to support multiple versions of this format.",
            "type": "string",
            "enum": ["5.0"]
        },
        "cveMetadataPublished": {
            "description": "This is meta data about the CVE ID such as the CVE ID, who requested it, who assigned it, when it was requested, when it was assigned, the current state (RESERVED, PUBLISHED, or REJECTED) and so on.",
            "type": "object",
            "required": [
                "id",
                "assigner",
                "state"
            ],
            "properties": {
                "id": {
                    "description": "The CVE identifier that this record pertains to.",
                    "$ref": "#/definitions/cveId"
                },
                "assigner": {
                    "$ref": "#/definitions/orgId",
                    "description": "the UUID for the organization to which the CVE ID was originally assigned. This UUID can be used to lookup the organization record in the user registry service."
                },
                "assignerShortName": {
                    "$ref": "#/definitions/shortName",
                    "description": "the short name for the organization to which the CVE ID was originally assigned"
                },
                "requester": {
                    "$ref": "#/definitions/userId",
                    "description": "the user that requested the CVE identifier"
                },
                "updated": {
                    "description": "the date/time the record was last updated",
                    "$ref": "#/definitions/timestamp"
                },
                "serial": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "starts at 1, add 1 every time an entry is updated or changed"
                },
                "dateRequested": {
                    "$ref": "#/definitions/timestamp",
                    "description": "the date/time this issue was requested"
                },
                "dateAssigned": {
                    "$ref": "#/definitions/timestamp",
                    "description": "the date/time this was assigned"
                },
                "datePublic": {
                    "$ref": "#/definitions/timestamp",
                    "description": "if known, the date/time the vulnerability was disclosed publicly."
                },
                "datePublished": {
                    "$ref": "#/definitions/timestamp",
                    "description": "The date/time the CVE record was first published in the CVE List."
                },
                "replacedBy": {
                    "type": "array",
                    "description": "an array of CVE IDs",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/cveId"
                    }
                },
                "state": {
                    "description": "State of CVE - PUBLISHED, RESERVED, REJECTED",
                    "type": "string",
                    "enum": ["PUBLISHED"]
                },
                "title": {
                    "type": "string",
                    "description": "Short title - if the description is long we may want a short title to refer to",
                    "minLength": 1,
                    "maxLength": 128
                }
            },
            "additionalProperties": false
        },
        "cveMetadataReserved": {
            "type": "object",
            "description": "This is meta data about the CVE ID such as the CVE ID, who requested it, who assigned it, when it was requested, when it was assigned, the current state (PUBLISHED, REJECTED, etc.) and so on.",
            "required": [
                "id",
                "state"
            ],
            "properties": {
                "id": {
                    "description": "The CVE identifier that this record pertains to",
                    "$ref": "#/definitions/cveId"
                },
                "assigner": {
                    "$ref": "#/definitions/orgId",
                    "description": "the UUID for the organization to which the CVE ID was originally assigned"
                },
                "assignerShortName": {
                    "$ref": "#/definitions/shortName",
                    "description": "the short name for the organization to which the CVE ID was originally assigned"
                },
                "state": {
                    "type": "string",
                    "description": "State of CVE - PUBLISHED, RESERVED, REJECTED",
                    "enum": ["RESERVED"]
                },
                "datePublic": {
                    "$ref": "#/definitions/datestamp",
                    "description": "Anticipated date for public release (YYYY-MM-DD)."
                }
            },
            "additionalProperties": false
        },
        "cveMetadataRejected": {
            "type": "object",
            "description": "This is meta data about the CVE ID such as the CVE ID, who requested it, who assigned it, when it was requested, when it was assigned, the current state (RESERVED, PUBLISHED, or REJECTED) and so on.",
            "required": [
                "id",
                "assigner",
                "state"
            ],
            "properties": {
                "id": {
                    "description": "The CVE identifier that this record pertains to",
                    "$ref": "#/definitions/cveId"
                },
                "assigner": {
                    "$ref": "#/definitions/orgId",
                    "description": "the UUID for the organization to which the CVE ID was originally assigned"
                },
                "assignerShortName": {
                    "$ref": "#/definitions/shortName",
                    "description": "the short name for the organization to which the CVE ID was originally assigned"
                },
                "state": {
                    "type": "string",

                    "description": "State of CVE - PUBLISHED, RESERVED, REJECTED",
                    "enum": ["REJECTED"]
                }
            },
            "additionalProperties": false
        },
        "providerMetadata": {
            "type": "object",
            "description": "will be updated to coordinate with CVE user registry, current identifier is an email address.",
            "properties": {
                "id": {
                    "$ref": "#/definitions/orgId",
                    "description": "the container provider's organizational UUID"
                },
                "shortName": {
                    "$ref": "#/definitions/shortName",
                    "description": "the container provider's organizational short name"
                },
                "updated": {
                    "$ref": "#/definitions/timestamp",
                    "description": "Timestamp to be set by the system of record at time of submission. If updated is provided to the system of record it will be replaced by the current timestamp at the time of submission. If a provider has multiple contributions, they shall be consolidated to a final single contribution before submission, or the system of record will reject the input with, Rejected \u2013 simultaneous contributions by a single provider."
                }
            },
            "required": ["id"]
        },
        "cnaContainer": {
            "description": "An object containing the vulnerability information provided by a CVE Numbering Authority (CNA). There can only be one CNA container per CVE record since there can only be one assigning CNA. The CNA container must include the required information defined in the CVE Rules, which includes a product, version, problem type, prose description, and a reference.",
            "type": "object",
            "properties": {
                "providerMetadata": {
                    "$ref": "#/definitions/providerMetadata"
                },
                "descriptions": {
                    "$ref": "#/definitions/descriptions"
                },
                "affected": {
                    "$ref": "#/definitions/affected"
                },
                "problemTypes": {
                    "$ref": "#/definitions/problemTypes"
                },
                "references": {
                    "$ref": "#/definitions/references"
                },
                "impacts": {
                    "$ref": "#/definitions/impacts"
                },
                "metrics": {
                    "$ref": "#/definitions/metrics"
                },
                "configurations": {
                    "$ref": "#/definitions/configurations"
                },
                "workarounds": {
                    "$ref": "#/definitions/workarounds"
                },
                "solutions": {
                    "$ref": "#/definitions/solutions"
                },
                "exploits": {
                    "$ref": "#/definitions/exploits"
                },
                "timeline": {
                    "$ref": "#/definitions/timeline"
                },
                "credits": {
                    "$ref": "#/definitions/credits"
                },
                "source": {
                    "$ref": "#/definitions/source"
                },
                "tags": {
                    "$ref": "#/definitions/cnaTags"
                },
                "taxonomyMappings": {
                    "$ref": "#/definitions/taxonomyMappings"
                }
            },
            "required": [
                "providerMetadata",
                "descriptions",
                "affected",
                "references"
            ],
            "additionalProperties": {
                "patternProperties": {
                    "^x_": {}
                }
            }
        },
        "adpContainer": {
            "description": "An object containing the vulnerability information provided by an Authorized Data Publisher (ADP). Since multiple ADPs can provide information for a CVE ID, an ADP container must indicate which ADP is the source of the information in the object.",
            "type": "object",
            "properties": {
                "providerMetadata": {
                    "$ref": "#/definitions/providerMetadata"
                },
                "descriptions": {
                    "$ref": "#/definitions/descriptions"
                },
                "affected": {
                    "$ref": "#/definitions/affected"
                },
                "problemTypes": {
                    "$ref": "#/definitions/problemTypes"
                },
                "references": {
                    "$ref": "#/definitions/references"
                },
                "impacts": {
                    "$ref": "#/definitions/impacts"
                },
                "metrics": {
                    "$ref": "#/definitions/metrics"
                },
                "configurations": {
                    "$ref": "#/definitions/configurations"
                },
                "workarounds": {
                    "$ref": "#/definitions/workarounds"
                },
                "solutions": {
                    "$ref": "#/definitions/solutions"
                },
                "exploits": {
                    "$ref": "#/definitions/exploits"
                },
                "timeline": {
                    "$ref": "#/definitions/timeline"
                },
                "credits": {
                    "$ref": "#/definitions/credits"
                },
                "source": {
                    "$ref": "#/definitions/source"
                },
                "tags": {
                    "$ref": "#/definitions/adpTags"
                },
                "taxonomyMappings": {
                    "$ref": "#/definitions/taxonomyMappings"
                }
            },
            "required": [
                "providerMetadata"
            ],
            "minProperties": 2,
            "additionalProperties": {
                "patternProperties": {
                    "^x_": {}
                }
            }
        },
        "containers": {
            "description": "A set of structures (called containers) used to store vulnerability information related to a specific CVE ID provided by a specific organization participating in the CVE program. Each container includes information provided by a different source.\n\nAt minimum, a 'cna' container containing the vulnerability information provided by the CNA who initially assigned the CVE ID must be included.\n\nThere can only be one 'cna' container, as there can only be one assigning CNA. However, there can be multiple 'adp' containers, allowing multiple organizations participating in the CVE program to add additional information related to the vulnerability. For the most part, the 'cna' and 'adp' containers contain the same properties. The main differences are the source of the information and the 'cna' container requires the CNA include certain fields, while the 'adp' container does not.",
            "type": "object",
            "properties": {
                "cna": {"$ref": "#/definitions/cnaContainer"},
                "adp": {
                    "type": "array",
                    "items": {"$ref": "#/definitions/adpContainer"},
                    "minItems": 1,
                    "uniqueItems": true
                }
            },
            "required": ["cna"],
            "additionalProperties": false
        },
        "affected": {
            "type": "object",
            "description": "CVE affects, there must be at least one defined vulnerable product either in the form of a text description (via data defined in vendors, product, version) OR a affectsCpe.",
            "minProperties": 1,
            "properties": {
                "vendors": {
                    "type": "array",
                    "description": "This is the container for affected vendors, it only goes in the affects container.",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "type": "object",
                        "$comment": "TODO description needed.",
                        "description": "",
                        "required": [
                            "vendorName",
                            "products"
                        ],
                        "properties": {
                            "vendorName": {
                                "type": "string",
                                "description": "Name of the vendor that produced this product.",
                                "minLength": 1,
                                "maxLength": 512
                            },
                            "products": {
                                "description": "This is the container for affected technologies, products, hardware, etc.",
                                "type": "array",
                                "minItems": 1,
                                "uniqueItems": true,
                                "items": {"$ref": "#/definitions/product"}
                                }
                            }
                        }
                },
                "affectsCpes": {
                    "type": "array",
                    "description": "Affected products defined by CPE. This is an array of CPE values (vulnerable and not), we use an array so that we can make multiple statements about the same version and they are separate (if we used a JSON object we'd essentially be keying on the CPE name and they would have to overlap). Also this allows things like cveDataVersion or cveDescription to be applied directly to the product entry. This also allows more complex statements such as \"Product X between versions 10.2 and 10.8\" to be put in a machine-readable format. As well since multiple statements can be used multiple branches of the same product can be defined here.",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                        "type": "object",
                        "$comment": "TODO description needed.",
                        "description": "",
                        "properties": {},
                        "minProperties": 1
                    }
                }
            },
            "additionalProperties": false
        },
        "description": {
            "type": "object",
            "description": "Text in a particular language with optional alternate markup or formatted representation (e.g., Markdown) or embedded media.",
            "properties": {
                "lang": {"$ref": "#/definitions/language"},
                "value": {
                    "type": "string",
                    "description": "Plain text description.",
                    "minLength": 1,
                    "maxLength": 4000
                },
                "supportingMedia": {
                    "type": "array",
                    "title": "Supporting media",
                    "description": "Supporting media data for the description such as markdown, diagrams, .. (optional). Similar to RFC 2397 each media object has three main parts: media type, media data value, and an optional boolean flag to indicate if the media data is base64 encoded.",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "title": "Media type",
                                "minLength": 1,
                                "maxLength": 255,
                                "description": "RFC2046 compliant IANA Media type for eg., text/markdown, text/html.",
                                "examples": [
                                    "text/markdown",
                                    "text/html",
                                    "image/png",
                                    "image/svg",
                                    "audio/mp3"
                                ]
                            },
                            "base64": {
                                "type": "boolean",
                                "title": "Encoding",
                                "description": "If true then the value field contains the media data encoded in base64. If false then the value field contains the UTF-8 media content.",
                                "default": false
                            },
                            "value": {
                                "type": "string",
                                "description": "Supporting media content, up to 16K. If base64 is true, this field stores base64 encoded data.",
                                "minLength": 1,
                                "maxLength": 16384
                            }
                        }
                    },
                    "required": [
                        "type",
                        "value"
                    ]
                }
            },
            "required": [
                "lang",
                "value"
            ],
            "additionalProperties": false
        },
        "descriptions": {
            "type": "array",
            "description": "A list of multi-lingual descriptions of the vulnerability. E.g., [PROBLEMTYPE] in [COMPONENT] in [VENDOR] [PRODUCT] [VERSION] on [PLATFORMS] allows [ATTACKER] to [IMPACT] via [VECTOR]. OR [COMPONENT] in [VENDOR] [PRODUCT] [VERSION] [ROOT CAUSE], which allows [ATTACKER] to [IMPACT] via [VECTOR].",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/description"
            }
        },
        "problemTypes": {
            "type": "array",
            "description": "This is problem type information (e.g. CWE identifier). Must contain: At least one entry, can be text, OWASP, CWE, please note that while only one is required you can use more than one (or indeed all three) as long as they are correct). (CNA requirement: [PROBLEMTYPE])",
            "items": {
                "$comment": "TODO: Is the description an enumeration or an example? All of these descriptions should be revisited",
                "type": "object",
                "description": "text, OWASP, or CWE",
                "required": ["descriptions"],
                "properties": {
                    "descriptions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "problem type description",
                            "required": [
                                "lang",
                                "description"
                            ],
                            "properties": {
                                "lang": {"$ref": "#/definitions/language"},
                                "description": {
                                    "type": "string",
                                    "description": "string description of problemType, or title from CWE, OWASP",
                                    "minLength": 1,
                                    "maxLength": 4000
                                },
                                "cweId": {
                                    "type": "string",
                                    "description": "CWE ID of the CWE that best describes this problemType entry",
                                    "minLength": 5,
                                    "maxLength": 9,
                                    "pattern": "^CWE-[1-9][0-9]+$"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "problemtype source, text, OWASP, CWE, etc",
                                    "minLength": 1,
                                    "maxLength": 128
                                },
                                "references": {"$ref": "#/definitions/references"}
                                }
                        },
                        "minItems": 1,
                        "uniqueItems": true
                    }
                }
            },
            "minItems": 1,
            "uniqueItems": true
        },
        "references": {
            "type": "array",
            "description": "This is reference data in the form of URLs or file objects (uuencoded and embedded within the JSON file, exact format to be decided, e.g. we may require a compressed format so the objects require unpacking before they are \"dangerous\").",
            "items": {"$ref": "#/definitions/reference"},
            "minItems": 1,
            "maxItems": 500,
            "uniqueItems": true
        },
        "impacts": {
            "type": "array",
            "description": "collection of impact scores with attribution",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "object",
                "description": "This is impact type information (e.g. a text description",
                "required": ["descriptions"],
                "properties": {
                    "capecId": {
                        "type": "string",
                        "description": "CAPEC ID that best relates to this impact",
                        "minLength": 7,
                        "maxLength": 11,
                        "pattern": "^CAPEC-[1-9][0-9]{0,4}$"
                    },
                    "descriptions": {
                        "description": "Prose description of the impact scenario. At a minimum provide the description given by CAPEC",
                        "$ref": "#/definitions/descriptions"
                    }
                }
            }
        },
        "metrics": {
            "type": "array",
            "description": "collection of impact scores with attribution",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "object",
                "description": "This is impact type information (e.g. a text description, CVSSv2, CVSSv3, etc.). Must contain: At least one entry, can be text, CVSSv2, CVSSv3, others may be added",
                "anyOf": [
                    {
                        "required": ["cvssV3_1"]
                    },
                    {
                        "required": ["cvssV3_0"]
                    },
                    {
                        "required": ["cvssV2_0"]
                    },
                    {
                        "required": ["other"]
                    }
                ],
                "properties": {
                    "format": {
                        "type": "string",
                        "description": "Name of the score format. This provides a bit future proofing. Additional properties are not prohibitied, so this will support inclusion of proprietary formats. It also provides an easy future conversion mechanism when future score formats become part of the schema. example: cvssV4_4, format = 'cvssV4_4', other = cvssV4_4 json object. In the future the other properties can be converted to score properties when they become part of the schema.",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "scenarios": {
                        "type": "array",
                        "description": "Description of the scenarios this metrics object applies to. If no specific scenario is given, GENERAL is used as the default and applies when no more specific metric matches.",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "properties": {
                                "lang": {"$ref": "#/definitions/language"},
                                "value": {
                                    "type": "string",
                                    "default": "GENERAL",
                                    "description": "Description of the scenario this metrics object applies to. If no specific scenario is given, GENERAL is used as the default and applies when no more specific metric matches.",
                                    "minLength": 1,
                                    "maxLength": 4000
                                }
                            },
                            "required": [
                                "lang",
                                "value"
                            ]
                        }
                    },
                    "cvssV3_1": {"$ref": "file:imports/cvss/cvss-v3.1.json"},
                    "cvssV3_0": {"$ref": "file:imports/cvss/cvss-v3.0.json"},
                    "cvssV2_0": {"$ref": "file:imports/cvss/cvss-v2.0.json"},
                    "other": {
                        "type": "object",
                        "description": "a non-standard impact description, may be prose or JSON block",
                        "required": [
                            "type",
                            "content"
                        ],
                        "properties": {
                            "type": {
                                "$comment": "TODO: description needed",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 128
                            },
                            "content": {
                                "type": "object",
                                "description": "JSON object not covered by another metrics format",
                                "minProperties": 1
                            }
                        }
                    }
                }
            }
        },
        "configurations": {
            "type": "array",
            "description": "Configurations required for exploiting this vulnerability.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/description"
            }
        },
        "workarounds": {
            "type": "array",
            "description": "Workarounds and mitigations for this vulnerability.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/description"
            }
        },
        "solutions": {
            "type": "array",
            "description": "Information about solutions or remediations available for this vulnerability.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/description"
            }
        },
        "exploits": {
            "type": "array",
            "description": "Information about exploits of the vulnerability.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "$ref": "#/definitions/description"
            }
        },
        "timeline": {
            "type": "array",
            "description": "This is timeline information for significant events about this vulnerability or changes to CVE entry",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "object",
                "required": [
                    "time",
                    "lang",
                    "value"
                ],
                "properties": {
                    "time": {
                        "description": "Timestamp representing when the event in the timeline occurred. The timestamp format is based on RFC3339 and ISO ISO8601, with an optional timezone. yyyy-MM-ddTHH:mm:ssZZZZ - if the timezone offset is not given, GMT (0000) is assumed.",
                        "$ref": "#/definitions/timestamp"
                    },
                    "lang": {
                        "description": "The language used in the description of the event. The language field is included so that CVE records can support translations. The value must be a BCP 47 language code.",
                        "$ref": "#/definitions/language"
                    },
                    "value": {
                        "description": "A summary of the event.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4000
                    }
                }
            }
        },
        "credits": {
            "type": "array",
            "description": "Statements acknowledging specific people, organizations, or tools recognizing the work done in researching, discovering, remediating or helping with activities related to this CVE.",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "object",
                "properties": {
                    "lang": {
                        "description": "The language used when describing the credits. The language field is included so that CVE records can support translations. The value must be a BCP 47 language code.",
                        "$ref": "#/definitions/language"
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4000
                    },
                    "user": {
                        "description": "UUID of the user being credited if present in the CVE User Registry (optional). This UUID can be used to lookup the user record in the user registry service.",
                        "$ref": "#/definitions/uuidType"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type or role of the entity being credited (optional). finder: identifies the vulnerability.\nreporter: notifies the vendor of the vulnerability to a CNA.\nanalyst: validates the vulnerability to ensure accuracy or severity.\ncoordinator: facilitates the coordinated response process.\nremediation developer: prepares a code change or other remediation plans.\nremediation reviewer: reviews vulnerability remediation plans or code changes for effectiveness and completeness.\nremediation verifier: tests and verifies the vulnerability or its remediation.\ntool: names of tools used in vulnerability discovery or identification.\nsponsor: supports the vulnerability identification or remediation activities.",
                        "default": "finder",
                        "enum": [
                            "finder",
                            "reporter",
                            "analyst",
                            "coordinator",
                            "remediation developer",
                            "remediation reviewer",
                            "remediation verifier",
                            "tool",
                            "sponsor",
                            "other"
                        ]
                    }
                },
                "required": [
                    "lang",
                    "value"
                ]
            }
        },
        "source": {
            "type": "object",
            "description": "This is the source information (who discovered it, who researched it, etc.) and optionally a chain of CNA information (e.g. the originating CNA and subsequent parent CNAs who have processed it before it arrives at the MITRE root).\n Must contain: IF this is in the root level it MUST contain a CNA_chain entry, IF this source entry is NOT in the root (e.g. it is part of a vendor statement) then it must contain at least one type of data entry.",
            "minProperties": 1
        },
        "language": {
            "type": "string",
            "description": "BCP 47 language code, language-region",
            "default": "en",
            "pattern": "^[A-Za-z]{2,4}([_-][A-Za-z]{4})?([_-]([A-Za-z]{2}|[0-9]{3}))?$"
        },
        "taxonomyMappings": {
            "type": "array",
            "description": "List of taxonomy items related to the vulnerability",
            "minitems": 1,
            "uniqueItems": true,
            "items": {
                "type": "object",
                "description": "",
                "required": [
                    "taxonomyName",
                    "taxonomyRelations"
                ],
                "properties": {
                    "taxonomyName": {
                        "type": "string",
                        "description": "The name of the taxonomy",
                        "minLength": 1,
                        "maxLength": 128
                    },
                    "taxonomyVersion": {
                        "type": "string",
                        "description": "The version of taxonomy the identifiers come from.",
                        "minLength": 1,
                        "maxLength": 128
                    },
                    "taxonomyRelations": {
                        "type": "array",
                        "description": "",
                        "minitems": 1,
                        "uniqueItems": true,
                        "items": {
                            "type": "object",
                            "description": "List of relationships to the taxonomy for the vulnerability.  Relationships can be between the taxonomy and the CVE or two taxonomy items",
                            "required": [
                                "taxonomyId",
                                "relationshipName",
                                "relationshipValue"
                            ],
                            "properties": {
                                "taxonomyId": {
                                    "type": "string",
                                    "description": "Identifier of the item in the taxonomy.  Used as the subject of the relationship.",
                                    "minLength": 1,
                                    "maxLength": 2000
                                },
                                "relationshipName": {
                                    "type": "string",
                                    "description": "A description of the relationship",
                                    "minLength": 1,
                                    "maxLength": 128
                                },
                                "relationshipValue": {
                                    "type": "string",
                                    "description": "The target of the relationship.  Can be the CVE ID or another taxonomy identifier",
                                    "minLength": 1,
                                    "maxLength": 2000
                                }
                            }
                        }
                    }
                }
            }
        },
        "tagExtension": {
            "type": "string",
            "minLength": 2,
            "maxLength": 128,
            "pattern": "^x_.*$"
        },
        "cnaTags": {
            "type": "array",
            "description": "Tags describing the CVE entry",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/tagExtension"
                    },
                    {
                        "$ref": "file:tags/cna-tags.json"
                    }
                ]
            }
        },
        "adpTags": {
            "type": "array",
            "description": "Tags describing the CVE entry",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/tagExtension"
                    },
                    {
                        "$ref": "file:tags/adp-tags.json"
                    }
                ]
            }
        }
    },
    "oneOf": [
        {
            "title": "Published",
            "description": "When a CNA populates the data associated with a CVE ID as a CVE Record, the state of the CVE Record is Published.",
            "properties": {
                "dataType": {
                    "$ref": "#/definitions/dataType"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "cveMetadata": {
                    "$ref": "#/definitions/cveMetadataPublished"
                },
                "containers": {
                    "$ref": "#/definitions/containers"
                }
            },
            "required": [
                "dataType",
                "dataVersion",
                "cveMetadata",
                "containers"
            ],
            "additionalProperties": false
        },
        {
            "title": "Reserved",
            "description": "The initial state for a CVE Record; when the associated CVE ID is Reserved by a CNA.",
            "properties": {
                "dataType": {
                    "$ref": "#/definitions/dataType"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "cveMetadata": {
                    "$ref": "#/definitions/cveMetadataReserved"
                },
                "descriptions": {
                    "$ref": "#/definitions/descriptions"
                }
            },
            "required": [
                "dataType",
                "dataVersion",
                "cveMetadata"
            ],
            "additionalProperties": false
        },
        {
            "title": "Rejected",
            "description": "If the CVE ID and associated CVE Record should no longer be used, the CVE Record is placed in the Rejected state. A Rejected CVE Record remains on the CVE List so that users can know when it is invalid.",
            "properties": {
                "dataType": {
                    "$ref": "#/definitions/dataType"
                },
                "dataVersion": {
                    "$ref": "#/definitions/dataVersion"
                },
                "cveMetadata": {
                    "$ref": "#/definitions/cveMetadataRejected"
                },
                "descriptions": {
                    "$ref": "#/definitions/descriptions"
                }
            },
            "required": [
                "dataType",
                "dataVersion",
                "cveMetadata"
            ],
            "additionalProperties": false
        }
    ]
}
